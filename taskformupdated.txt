import React from "react";
import { useForm } from "react-hook-form";
import Modal from "./Modal";

const TaskForm = ({ addTask, setShowForm }) => {
  const {
    register,
    handleSubmit,
    formState: { errors },
    reset,
  } = useForm();

  const onSubmit = (data) => {
    addTask(data);
    reset();
    setShowForm(false);
  };

  const getTodayDate = () => {
    const today = new Date();
    const year = today.getFullYear();
    const month = String(today.getMonth() + 1).padStart(2, "0");
    const day = String(today.getDate()).padStart(2, "0");
    return `${year}-${month}-${day}`;
  };

  return (
    <Modal onClose={() => setShowForm(false)}>
      <form onSubmit={handleSubmit(onSubmit)}>
        <h3 className="text-lg font-semibold text-blue-800 mb-2">Task Title</h3>
        <input
          type="text"
          placeholder="Title"
          {...register("title", 
            { required: "Task Title is required" })}
          className="border border-gray-300 rounded-md px-3 py-2 mb-2 w-full"
        />
        {errors.title && (
          <div className="mb-4 text-red-600">{errors.title.message}</div>
        )}

        <h3 className="text-lg font-semibold text-blue-800 mb-2">
          Task Description
        </h3>
        <input
          type="text"
          placeholder="Description"
          {...register("description", {
            required:"Task Description is required",
          })}
          className="border border-gray-300 rounded-md px-3 py-2 mb-2 w-full"
        />
        {errors.description && (
          <div className="mb-4 text-red-600">{errors.description.message}</div>
        )}

        <h3 className="text-lg font-semibold text-blue-800 mb-2">Due Date</h3>
        <input
          type="date"
          placeholder="Due Date"
          {...register("dueDate", { required: "Due Date is required" })}
          className="border border-gray-300 rounded-md px-3 py-2 mb-2 w-full"
          min={getTodayDate()} // Prevent selecting dates before today
        />
        {errors.dueDate && (
          <div className="mb-4 text-red-600">{errors.dueDate.message}</div>
        )}

        <h3 className="text-lg font-semibold text-blue-800 mb-2">Status</h3>
        <select
          {...register("status")}
          className="border border-gray-300 rounded-md px-3 py-2 mb-2 w-full bg-gray-100 text-gray-800 focus:outline-none focus-visible:text-black focus-visible:border-purple-500"
        >
          <option value="todo">Todo</option>
          <option value="in-progress">In-Progress</option>
          <option value="completed">Completed</option>
        </select>

        <div className="flex justify-end mt-4">
          <button
            type="submit"
            className="bg-blue-600 hover:bg-green-600 text-white px-4 py-2 rounded-md mr-2"
          >
            Add Task
          </button>
          <button
            type="button"
            onClick={() => setShowForm(false)}
            className="bg-gray-500 hover:bg-red-600 text-white px-4 py-2 rounded-md"
          >
            Cancel
          </button>
        </div>
      </form>
    </Modal>
  );
};

export default TaskForm;
